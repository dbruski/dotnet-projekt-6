@page "/services/new"
@using UC

@inject NavigationManager NavigationManager
@inject UC.ServicesUseCases.IAddServiceUseCase AddServiceUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase

<h3>Dodaj usługę</h3>

@if (service != null)
{
    <EditForm Model="service" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Nazwa</label>
            <InputText id="name" @bind-Value="service.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="category">Kategoria</label>
            <select name="category" @bind="service.CategoryId">
                <option></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="price">Cena</label>
            <InputNumber id="price" @bind-Value="service.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <button type="submit" class="btn btn-primary">Dodaj</button>
        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Anuluj</button>
    </EditForm>
}

@code {
    private Service service;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        service = new Service();
        categories = ViewCategoriesUseCase.Execute();
    }

    private void OnValidSubmit()
    {
        AddServiceUseCase.Execute(service);
        NavigationManager.NavigateTo("/services");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/services");
    }
}
