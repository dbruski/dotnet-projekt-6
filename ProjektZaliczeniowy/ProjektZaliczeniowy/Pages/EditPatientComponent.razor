@page "/patients/edit/{patientId}"

@inject NavigationManager NavigationManager
@inject UC.PatientsUseCases.IGetPatientByIdUseCase GetPatientByIdUseCase
@inject UC.PatientsUseCases.IEditPatientUseCase EditPatientUseCase
@inject UC.IViewDoctorsUseCase ViewDoctorsUseCase

<h3>Edytuj profil pacjenta</h3>

@if (patient != null)
{
    <EditForm Model="patient" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Imię</label>
            <InputText id="name" @bind-Value="patient.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="lastname">Nazwisko</label>
            <InputText id="lastname" @bind-Value="patient.LastName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="birthday">Data urodzenia</label>
            <InputDate id="birthday" @bind-Value="patient.Birthday" class="form-control"></InputDate>
        </div>
        <div class="form-group">
            <label for="pesel">PESEL</label>
            <InputText id="pesel" @bind-Value="patient.Pesel" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="phone">Numer telefonu</label>
            <InputText id="phone" @bind-Value="patient.PhoneNumber" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="doctor">Lekarz</label>
            <select name="doctor" @bind="patient.DoctorId">
                <option></option>
                @foreach (var doc in doctors)
                {
                    <option value="@doc.DoctorId">@doc.Name @doc.LastName</option>
                }
            </select>
        </div>

    <button type="submit" class="btn btn-primary">Edytuj</button>
    <button type="button" class="btn btn-danger" @onclick="OnCancel">Anuluj</button>

    </EditForm>
}

@code {
    [Parameter]
    public string patientId { get; set; }
    private Patient patient;
    private List<Doctor> doctors;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        doctors = ViewDoctorsUseCase.Execute().ToList();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        this.patient = GetPatientByIdUseCase.Execute(this.patientId);
    }

    private void OnValidSubmit()
    {
        EditPatientUseCase.Execute(this.patient);
        NavigationManager.NavigateTo("/patients");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/patients");
    }
}
