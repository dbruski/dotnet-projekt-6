@page "/categories/edit/{categoryId}"
@using UC

@inject NavigationManager NavigationManager
@inject IAddCategoryUseCase AddCategoryUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IEditCategoryUseCase EditCategoryUseCase

<h3>Edytuj kategorię</h3>

@if (category != null)
{
    <EditForm Model="category" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Nazwa</label>
            <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">Opis</label>
            <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Edytuj</button>
        <button type="button" class="btn btn-danger" @onclick="OnCancel">Anuluj</button>
    </EditForm>
}

@code {
    [Parameter]
    public string categoryId { get; set; }
    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        category = new Category();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        this.category = GetCategoryByIdUseCase.Execute(this.categoryId);
    }

    private void OnValidSubmit()
    {
        EditCategoryUseCase.Execute(this.category);
        NavigationManager.NavigateTo("/categories");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }
}
